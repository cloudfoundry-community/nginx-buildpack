#!/usr/bin/env bash

# ---------------------------------------------------------------------
# Copyright 2013-2014 Jordon Bedwell.
# Apache 2.0 License.
# ---------------------------------------------------------------------

buildpack_root=$PWD

# ---------------------------------------------------------------------

buildpack_pcre_version=8.34
buildpack_pcre_url=ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre
buildpack_pcre_download=$buildpack_pcre_url/pcre-$buildpack_pcre_version.tar.gz

# ---------------------------------------------------------------------

buildpack_nginx_url=http://nginx.org/download
buildpack_nginx_version=1.4.5
buildpack_nginx_build_flags=(
  --with-http_gzip_static_module
  --with-http_realip_module
  --without-mail_pop3_module
  --without-mail_imap_module
  --without-mail_smtp_module
  --without-http_ssi_module
  --without-http_userid_module
  --without-http_auth_basic_module
  --without-http_split_clients_module
  --without-http_fastcgi_module
  --without-http_uwsgi_module
  --without-http_scgi_module
  --without-http_memcached_module
  --without-http_limit_conn_module
  --without-http_limit_req_module
  --without-http_empty_gif_module
  --prefix=/app/nginx
  --with-pcre=./pcre-$buildpack_pcre_version
)

buildpack_nginx_download=$buildpack_nginx_url/nginx-$buildpack_nginx_version.tar.gz

# ---------------------------------------------------------------------

function buildpack_exit()
{
  echo $1
  exit $2 || 1
}

# ---------------------------------------------------------------------
# $~: heroku-buildpack download
# ---------------------------------------------------------------------

function buildpack_download()
{
  nginx=$(basename ${buildpack_nginx_download%.tar.gz})
  mkdir -p $buildpack_root/sources
  cd $buildpack_root/sources

  if curl -s $buildpack_nginx_download |tar xzv
  then
    # Puts PCRE into the NGINX folder so it uploads yo.
    curl -s $buildpack_pcre_download |tar xzv -C $nginx
  fi
}

# ---------------------------------------------------------------------
# $~: heroku-buildpack build
# ---------------------------------------------------------------------

function buildpack_build()
{
  nginx=$(basename ${buildpack_nginx_download%.tar.gz})
  cd $buildpack_root/sources/$nginx
  mkdir -p $buildpack_root/builds
  ./configure ${buildpack_nginx_build_flags[*]}
  make install DESTDIR=$buildpack_root/builds/$nginx
  echo "You should probably run 'support/heroku-buildpack setup' to clean the build."
}

# ------------------------------------------------------------------------------------------------
# $~: heroku-buildpack setup
# ------------------------------------------------------------------------------------------------

function buildpack_setup()
{
  nginx=$(basename ${buildpack_nginx_download%.tar.gz})
  mkdir -p $buildpack_root/builds
  cd $buildpack_root/builds

  [[ -d $nginx ]] || buildpack_exit "No"
  mv $nginx/app/nginx/* $nginx/
  rm -rf $nginx/app
  chmod -R uog+rx $nginx/sbin
  rm -rf $nginx/html
  rm -rf $nginx/conf
  rm -rf $nginx/logs
  cp -R $buildpack_root/conf $nginx
  cp -R $buildpack_root/logs $nginx
  tar czvf $nginx.tar.gz $nginx --transform s/^$nginx/nginx/ --owner=0 --group=0 && rm -rf $nginx
}

# ---------------------------------------------------------------------
# $~: heroku-buildpack cleanup
# ---------------------------------------------------------------------

function buildpack_cleanup()
{
  rm -rf $buildpack_root/builds && rm -rf $buildpack_root/sources
  mkdir  $buildpack_root/builds && mkdir  $buildpack_root/sources
}

# ---------------------------------------------------------------------
# $~: heroku-buildpack dependencies
# ---------------------------------------------------------------------

function buildpack_dependencies()
{
  if type apt-get; then
    sudo apt-get install zlib1g-dev libssl-dev \
      --no-install-recommends --yes
  fi
}

function buildpack_dependency_cleanup()
{
  if type apt-get; then
    sudo apt-get autoremove --purge zlib1g-dev libssl-dev --yes
  fi
}

# ---------------------------------------------------------------------

case "$1" in
  dependencies) buildpack_dependencies;;
  cleanup) buildpack_cleanup;;
  setup) buildpack_setup;;
  build) buildpack_build;;
  download) buildpack_download;;
  run)
    buildpack_dependencies && \
    buildpack_cleanup && \
    buildpack_download && \
    buildpack_build && \
    buildpack_setup && \
    buildpack_dependency_cleanup;;
esac
